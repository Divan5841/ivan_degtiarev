{"version":3,"file":"css/1.0.0/main.d4de7a31a0ffd4854e6c.css","mappings":"AAIA,MCEE,oBACA,uBAIA,oBACA,yBACA,qBAIA,mBAAoB,CACpB,iBAAkB,CC4ClB,yBF1DF,MCyBI,eACA,gBACA,WACA,WC8BF,0DF1DF,MCgCI,cACA,gBACA,WACA,WCuBF,oCF1DF,MCuCI,cACA,gBACA,WACA,WDrCJ,iBAGE,sBAEA,QAAO,CADP,SACA,CAGF,kBAGE,YAGF,UAME,uBACA,eG3BQ,CHuBR,gBAOA,kBACA,uBAHA,6BAGA,CAGF,UG5BE,sCHiCA,CALF,KACE,+BAGA,mCACA,kCAGF,EACE,cACA,qBI7CF,QCEE,gDADA,4BACA,CA2BA,YACE,gBADF,YACE,eDpBF,gBEPA,cJyDA,wBElDA,gBEJE,gBJsDF,oCElDA,gCGVF,QACE,qBACA,cAEA,eACE,WCLJ,QACE,aAEA,SADA,wBACA,CAEA,gBCMA,0BACA,0BJuBA,sCIpBE,sBACE,0BP4CJ,wBMvDA,gBFYE,eADA,eACA,EJ2CF,oCMvDA,gBFiBE,eADA,eACA,EDOF,YACE,gBADF,YACE,eKvBF,UDIA,0BACA,0BJuBA,sCIpBE,gBACE,0BCJN,QACE,ePfK,CD8DL,wBQhDF,QJKI,eADA,eACA,EJ2CF,oCQhDF,QJUI,eADA,eACA,EJsCF,wBQ3CF,QJAI,eADA,eACA,EJ2CF,oCQ3CF,QJKI,eADA,eACA,EIDJ,QACE,kBLOA,YACE,eH8BF,wBQlCF,QJTI,eADA,eACA,EJ2CF,oCQlCF,QJJI,eADA,eACA,EKtBJ,QAGE,gBAFA,iBAEA,CN0BA,YACE,gBMvBJ,QLJE,cJyDA,wBSrDF,QLDI,gBJsDF,oCSrDF,QLGI,gBDmBF,YACE,gBMfJ,QAOE,2BADA,8BAEA,wCANA,YAEA,SAHA,kBAEA,UAKA,CCvBF,QAEE,cADA,iBACA,CAGF,QAGE,UAGF,gBAJE,QADA,iBCuBO,CDlBT,QAQE,uBAFA,aAGA,QCSO,CDXP,kCAHA,gBAOA,aARA,SCeO","sources":["webpack://ivan_degtiarev/./src/styles/main.scss","webpack://ivan_degtiarev/./src/styles/theme.scss","webpack://ivan_degtiarev/./src/styles/media.scss","webpack://ivan_degtiarev/./src/styles/fonts.scss","webpack://ivan_degtiarev/./src/components/services/Errors/Error.module.scss","webpack://ivan_degtiarev/./src/styles/mixins.scss","webpack://ivan_degtiarev/./src/styles/text.scss","webpack://ivan_degtiarev/./src/components/units/Link/Link.module.scss","webpack://ivan_degtiarev/./src/pages/Low/components/Contacts/Contacts.module.scss","webpack://ivan_degtiarev/./src/styles/mixins_style.scss","webpack://ivan_degtiarev/./src/pages/Low/components/Work/Work.module.scss","webpack://ivan_degtiarev/./src/pages/Low/components/Works/Works.module.scss","webpack://ivan_degtiarev/./src/pages/Low/components/Layout/Layout.module.scss","webpack://ivan_degtiarev/./src/styles/grid.scss"],"sourcesContent":["@use 'fonts';\n@use 'theme';\n@use 'constants';\n\n:root {\n  @include theme.main_theme;\n  @include theme.sizes_adapt;\n}\n\n*,\n::before,\n::after {\n  box-sizing: border-box;\n  padding: 0;\n  margin: 0;\n}\n\nhtml,\nbody,\n#root {\n  height: 100%;\n}\n\nhtml,\nbody {\n  //max-width: 100vw;\n  min-width: 320px;\n\n  @include fonts.Arial;\n  color: var(--text_main);\n  font-weight: fonts.$regular;\n  text-decoration-skip-ink: none;\n\n  overflow-x: hidden;\n  scroll-behavior: smooth;\n}\n\nbody {\n  background: var(--background_0);\n\n  font-family: Arial, Helvetica, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\na {\n  color: inherit;\n  text-decoration: none;\n}\n","@use 'colors';\n@use 'constants';\n@use 'grid';\n@use 'media';\n\n@mixin background_vars {\n  --background_0: #{colors.$natural_00};\n  --background_1: #{colors.$natural_10};\n}\n\n@mixin text_vars {\n  --text_main: #{colors.$dark_100};\n  --text_secondary: #{colors.$natural_70};\n  --text_contrast: #{colors.$natural_00};\n}\n\n@mixin link_vars {\n  --link_primary: blue;\n  --link_active: red;\n}\n\n@mixin main_theme {\n  @include background_vars;\n  @include text_vars;\n  @include link_vars;\n}\n\n@mixin sizes_adapt {\n  @include media.lg_up {\n    --glass: #{constants.$width_lg};\n    --gap_side: #{grid.$gap_side_lg};\n    --gap: #{grid.$gap_lg};\n    --br: #{constants.$br_6};\n  }\n\n  @include media.md_only {\n    --glass: #{constants.$width_md};\n    --gap_side: #{grid.$gap_side_md};\n    --gap: #{grid.$gap_md};\n    --br: #{constants.$br_5};\n  }\n\n  @include media.md_down {\n    --glass: #{constants.$width_sm};\n    --gap_side: #{grid.$gap_side_sm};\n    --gap: #{grid.$gap_sm};\n    --br: #{constants.$br_4};\n  }\n}\n","@use 'sass:list';\n@use 'sass:map';\n@use 'constants';\n\n@function str-join($str1: null, $str2: null, $delimiter: null) {\n  $ret: '';\n\n  @if $str1 {\n    $ret: $ret + $str1;\n\n    @if $delimiter and $str2 {\n      $ret: $ret + $delimiter;\n    }\n  }\n\n  @if $str2 {\n    $ret: $ret + $str2;\n  }\n\n  @return $ret;\n}\n\n$breakpoints: (\n  sm: constants.$width_sm,\n  md: constants.$width_md,\n  lg: constants.$width_lg,\n  xlg: constants.$width_xlg,\n);\n\n// $breakpoint: 'sm' | 'md' | 'lg' | 'xlg'\n// $dir: 'up' | 'down' | 'only'\n\n@mixin breakpoint($breakpoint, $dir) {\n  $bpsList: map.keys($breakpoints);\n\n  $bpIndex: list.index($bpsList, $breakpoint);\n  $bp: map.get($breakpoints, $breakpoint);\n\n  $bpNextIndex: list.nth($bpsList, $bpIndex + 1);\n  $bpNext: map.get($breakpoints, $bpNextIndex);\n\n  $bpMin: null;\n  $bpMax: null;\n\n  @if $dir == 'only' or $dir == 'up' {\n    $bpMin: $bp;\n  }\n\n  @if $dir == 'only' and $bpNext {\n    $bpMax: $bpNext;\n  }\n\n  @if $dir == 'down' {\n    $bpMax: $bp;\n  }\n\n  $media: str-join(\n    if($bpMin, '(min-width: #{$bpMin})', null),\n    if($bpMax, '(max-width: calc(#{$bpMax} - 1px))', null),\n    ' and '\n  );\n\n  @media #{$media} {\n    @content;\n  }\n}\n\n@mixin lg_up() {\n  @include breakpoint('lg', 'up') {\n    @content;\n  }\n}\n\n@mixin lg_down() {\n  @include breakpoint('lg', 'down') {\n    @content;\n  }\n}\n\n@mixin md_up() {\n  @include breakpoint('md', 'up') {\n    @content;\n  }\n}\n\n@mixin md_only() {\n  @include breakpoint('md', 'only') {\n    @content;\n  }\n}\n\n@mixin md_down() {\n  @include breakpoint('md', 'down') {\n    @content;\n  }\n}\n","$bold: 700;\n$semi_bold: 600;\n$medium: 500;\n$regular: 400;\n$light: 300;\n$extra_light: 200;\n$thin: 100;\n\n@mixin Arial {\n  font-family: Arial, Helvetica, sans-serif;\n}\n","@use 'src/styles';\n\n.content {\n  @include styles.glass(var(--glass));\n  padding: styles.gap(10) var(--gap_side);\n\n  @include styles.list(styles.gap(10));\n}\n\n.text_box {\n  @include styles.list(styles.gap(2));\n\n  .title {\n    @include styles.text_h1;\n  }\n}\n","@use 'constants' as c;\n\n@mixin glass($width) {\n  width: min(100%, #{$width});\n  margin-inline: auto;\n}\n\n@mixin max_width($width) {\n  width: min(100%, #{$width});\n}\n\n@mixin out_width($gap) {\n  margin-left: calc(#{$gap} * -1);\n  margin-right: calc(#{$gap} * -1);\n}\n\n@mixin center_row_self() {\n  margin-inline: auto;\n}\n\n@mixin center_row() {\n  display: flex;\n  justify-content: center;\n}\n\n@mixin center_child() {\n  display: grid;\n  place-items: center;\n}\n\n@mixin list($gap) {\n  & > * + * {\n    margin: $gap 0 0 0;\n  }\n}\n\n@mixin hover_enabled {\n  @media (hover: hover) and (pointer: fine) {\n    @content;\n  }\n}\n\n@mixin pointer {\n  @include hover_enabled {\n    cursor: pointer;\n    @content;\n  }\n}\n\n@mixin non_clickable {\n  pointer-events: none;\n  user-select: none;\n}\n\n@mixin hide_scroll {\n  scroll-behavior: smooth;\n\n  -ms-overflow-style: none; /* IE Ð¸ Edge */\n  scrollbar-width: none; /* Firefox */\n  &::-webkit-scrollbar {\n    display: none;\n  }\n}\n\n@mixin hidden {\n  display: none;\n  visibility: hidden;\n}\n\n@mixin hide_empty {\n  &:empty {\n    @include hidden;\n  }\n}\n\n@mixin ellipsis {\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n\n@mixin ellipsis_row($row_count) {\n  display: -webkit-box;\n  -webkit-line-clamp: $row_count;\n  -webkit-box-orient: vertical;\n  overflow: hidden;\n}\n\n@mixin square($size) {\n  height: $size;\n  width: $size;\n}\n\n@mixin circle($size) {\n  height: $size;\n  width: $size;\n  border-radius: c.$br_circle;\n}\n\n@mixin aspect_ratio($ratio) {\n  @supports (aspect-ratio: 1) {\n    width: 100%;\n    aspect-ratio: $ratio;\n\n    @content;\n  }\n\n  @supports not (aspect-ratio: 1) {\n    display: flex;\n    &::after {\n      content: '';\n      padding-top: calc(100% / #{$ratio});\n    }\n\n    width: 100%;\n    height: 100%;\n\n    @content;\n  }\n}\n\n@mixin scroll_box(\n  $gap_side,\n  $gap_cell,\n  $cell_max_width,\n  $cell_min_width: false\n) {\n  overflow: auto hidden;\n  scroll-snap-type: x mandatory;\n  scroll-padding-left: $gap_side;\n  padding-left: $gap_side;\n\n  & > *:first-child > * {\n    scroll-snap-align: start;\n  }\n\n  & > *:first-child {\n    position: relative;\n\n    display: grid;\n    grid-auto-flow: column;\n    gap: $gap_cell;\n\n    width: max-content;\n    padding-right: $gap_side;\n\n    @if $cell_min_width {\n      grid-auto-columns: min(#{$cell_min_width}, #{$cell_max_width});\n    } @else {\n      grid-auto-columns: $cell_max_width;\n    }\n  }\n\n  @content;\n\n  @include hide_scroll;\n}\n\n@mixin focus_visible_outline {\n  outline: 1px auto var(--stroke_primary);\n}\n\n@mixin not_highlight_click {\n  -webkit-tap-highlight-color: transparent;\n}\n\n@mixin video_box_border_radius {\n  -webkit-mask-image: -webkit-radial-gradient(white, black);\n}\n","@use 'media';\n\n// title\n\n@mixin text_h1 {\n  line-height: 1;\n\n  @include media.md_up {\n    font-size: 32px;\n  }\n\n  @include media.md_down {\n    font-size: 24px;\n  }\n}\n\n@mixin text_body {\n  @include media.md_up {\n    line-height: 1.2;\n    font-size: 16px;\n  }\n\n  @include media.md_down {\n    line-height: 1.2;\n    font-size: 14px;\n  }\n}\n","@use 'src/styles';\n\n.link {\n  display: inline-block;\n  line-height: 0;\n\n  & > button {\n    width: 100%;\n  }\n}\n","@use 'src/styles';\n\n.box {\n  display: grid;\n  justify-items: flex-start;\n  gap: styles.gap(3);\n\n  .text {\n    @include styles.link;\n    @include styles.text_body;\n  }\n}\n","@use 'mixins';\n\n// $dir: 'top' | 'left' | 'right' | 'bottom'\n\n@mixin fade($dir, $color, $opacity: 1) {\n  background: linear-gradient(\n    to #{$dir},\n    rgba($color, $opacity),\n    rgba($color, 0)\n  );\n}\n\n@mixin link {\n  color: var(--link_primary);\n  text-decoration: underline;\n\n  @include mixins.hover_enabled {\n    &:hover {\n      color: var(--link_active);\n    }\n  }\n}\n","@use 'src/styles';\n\n.box {\n  @include styles.list(styles.gap(4));\n}\n\n.info {\n  @include styles.list(styles.gap(2));\n\n  a {\n    @include styles.link;\n  }\n}\n\n.title {\n  font-weight: styles.$bold;\n  @include styles.text_body;\n}\n\n.description {\n  @include styles.text_body;\n}\n\n.list {\n  padding-left: styles.gap(3);\n  @include styles.list(styles.gap(2));\n}\n\n.listItem {\n  @include styles.text_body;\n}\n","@use 'src/styles';\n\n.mainBox {\n  position: relative;\n\n  max-width: 700px;\n  @include styles.list(styles.gap(8));\n}\n\n.title {\n  @include styles.text_h1;\n}\n\n.list {\n  @include styles.list(styles.gap(8));\n}\n\n.background {\n  position: absolute;\n  inset: -20px;\n  z-index: -1;\n  margin: 0;\n\n  background: rgba(255, 255, 255, 0.2);\n  backdrop-filter: blur(10px);\n  box-shadow: 0 0 100px rgba(255, 255, 255, 0.3);\n}\n","@use 'src/styles';\n\n.box {\n  position: relative;\n  height: 100dvh;\n}\n\n.viewer {\n  position: absolute;\n  inset: 0;\n  z-index: 1;\n}\n\n.main {\n  position: absolute;\n  inset: 0;\n  z-index: 2;\n  overflow-y: auto;\n\n  display: grid;\n  grid-template-columns: 2fr 8fr 2fr;\n  align-items: flex-start;\n  gap: styles.$gap_lg;\n\n  padding: styles.$gap_lg;\n}\n","@use 'constants';\n\n// sm\n\n$gap_side_sm: 16px;\n$gap_sm: 12px;\n$count_columns_sm: 4;\n\n@function column_sm($count) {\n  $sm_column_1: calc(\n    (min(100vw, #{constants.$width_sm}) - #{$gap_side_sm * 2} - #{$gap_sm * 3}) / #{$count_columns_sm}\n  );\n  @return calc(#{$sm_column_1} * #{$count} + #{$gap_sm} * #{$count - 1});\n}\n\n// md\n\n$gap_side_md: 20px;\n$gap_md: 16px;\n$count_columns_md: 8;\n\n@function column_md($count) {\n  $md_column_1: calc(\n    (min(100vw, #{constants.$width_md}) - #{$gap_side_md * 2} - #{$gap_md * 7}) / #{$count_columns_md}\n  );\n  @return calc(#{$md_column_1} * #{$count} + #{$gap_md} * #{$count - 1});\n}\n\n//lg\n\n$gap_side_lg: 24px;\n$gap_lg: 20px;\n$count_columns_lg: 12;\n\n@function column_lg($count) {\n  $lg_column_1: calc(\n    (min(100vw, #{constants.$width_lg}) - #{$gap_side_lg * 2} - #{$gap_lg * 11}) / #{$count_columns_lg}\n  );\n  @return calc(#{$lg_column_1} * #{$count} + #{$gap_lg} * #{$count - 1});\n}\n"],"names":[],"sourceRoot":""}