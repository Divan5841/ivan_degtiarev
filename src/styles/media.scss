@use 'sass:list';
@use 'sass:map';
@use 'constants';

@function str-join($str1: null, $str2: null, $delimiter: null) {
  $ret: '';

  @if $str1 {
    $ret: $ret + $str1;

    @if $delimiter and $str2 {
      $ret: $ret + $delimiter;
    }
  }

  @if $str2 {
    $ret: $ret + $str2;
  }

  @return $ret;
}

$breakpoints: (
  sm: constants.$width_sm,
  md: constants.$width_md,
  lg: constants.$width_lg,
  xlg: constants.$width_xlg,
);

// $breakpoint: 'sm' | 'md' | 'lg' | 'xlg'
// $dir: 'up' | 'down' | 'only'

@mixin breakpoint($breakpoint, $dir) {
  $bpsList: map.keys($breakpoints);

  $bpIndex: list.index($bpsList, $breakpoint);
  $bp: map.get($breakpoints, $breakpoint);

  $bpNextIndex: list.nth($bpsList, $bpIndex + 1);
  $bpNext: map.get($breakpoints, $bpNextIndex);

  $bpMin: null;
  $bpMax: null;

  @if $dir == 'only' or $dir == 'up' {
    $bpMin: $bp;
  }

  @if $dir == 'only' and $bpNext {
    $bpMax: $bpNext;
  }

  @if $dir == 'down' {
    $bpMax: $bp;
  }

  $media: str-join(
    if($bpMin, '(min-width: #{$bpMin})', null),
    if($bpMax, '(max-width: calc(#{$bpMax} - 1px))', null),
    ' and '
  );

  @media #{$media} {
    @content;
  }
}

@mixin lg_up() {
  @include breakpoint('lg', 'up') {
    @content;
  }
}

@mixin lg_down() {
  @include breakpoint('lg', 'down') {
    @content;
  }
}

@mixin md_up() {
  @include breakpoint('md', 'up') {
    @content;
  }
}

@mixin md_only() {
  @include breakpoint('md', 'only') {
    @content;
  }
}

@mixin md_down() {
  @include breakpoint('md', 'down') {
    @content;
  }
}
